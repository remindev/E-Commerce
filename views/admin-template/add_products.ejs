<!-- Begin Page Content -->
<div class="container-fluid">

  <!-- Page Heading -->
  <h1 class="h3 mb-4 text-gray-800">Add products</h1>
  <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> -->
  <!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> -->

  <div class="custom-modal" id="imageEditor" style="display:none;">
    <div class="inner-cont rounded">
      <div class="card rounded animate__animated  animate__bounceInUp">
        <div class="card-header px-4 py-3 bg-white">Edit Images</div>
        <div class="card-body d-flex p-0 m-0 justify-content-start position-relative">

          <div style="width: 65%; padding: 10px;" class="h-100 img-cont-out bg-light d-flex align-items-center justify-content-center position-relative">
            <img id="imageEditable" style="width: 100%;
              height: 100%;
              object-fit: scale-down;" src="http://localhost:8081/product_images/aTMq1gnqVTdDPMb8EMBv1.jpg" alt="">
          </div>

          <div class="col-4 py-4 pb-2 px-4 position-relative">
            <div class="text-cont">
              <div class="d-flex justify-content-between">
                <h6>Crop your image</h6>
              </div>
              <p>
                Cropping your image to a fixed aspect ratio helps to improve the perfomance of your product.
                So we fixed to 1:1
              </p>
            </div>

            <div class="aciton-cont">
              <div class="d-flex justify-content-end">
                <div class="d-flex align-items-center" onclick="window.crop.reset()">
                  <small class="mb-1 p-0">Reset -&nbsp;</small> <i class="mdi mdi-autorenew text-primary"></i>
                </div>
              </div>
              <button class="border p-3 my-2 w-100 bg-white d-flex align-items-center gap-2 justify-content-between" onclick="window['crop'].setDragMode('crop')">
                Drag to crop
                <i class="mdi mdi-plus text-primary"></i>
              </button>
              <button class="border p-3 my-2 w-100 bg-white d-flex align-items-center gap-2 justify-content-between" onclick="window['crop'].setDragMode('move')">
                Move
                <i class="mdi mdi-arrow-all text-primary"></i>
              </button>
              <button class="border p-3 my-2 w-100 bg-white d-flex align-items-center gap-2 justify-content-between">
                <span>Move-X</span>
                <div class="d-flex align-items-center gap-3">
                  <i class="mdi mdi-arrow-left text-primary" onclick="window['crop'].move(-10,0)"></i>
                  <i class="mdi mdi-arrow-right text-primary" onclick="window['crop'].move(10,0)"></i>
                </div>
              </button>
              <button class="border p-3 my-2 w-100 bg-white d-flex align-items-center gap-2 justify-content-between">
                <span>Move-Y</span>
                <div class="d-flex align-items-center gap-3">
                  <i class="mdi mdi-arrow-up text-primary" onclick="window['crop'].move(0,-10)"></i>
                  <i class="mdi mdi-arrow-down text-primary" onclick="window['crop'].move(0,10)"></i>
                </div>
              </button>
              <button class="border p-3 my-2 w-100 bg-white d-flex align-items-center gap-2 justify-content-between">
                <span>Zoom</span>
                <div class="d-flex align-items-center gap-3">
                  <i class="mdi mdi-magnify-plus text-primary" onclick="window['crop'].zoom(1)"></i>
                  <i class="mdi mdi-magnify-minus text-primary" onclick="window['crop'].zoom(-1)"></i>
                </div>
              </button>
            </div>
          </div>

        </div>
        <div id="card_actions" class="card-footer d-flex justify-content-between px-4 py-2 bg-white">
          <button class="btn btn-info">Preview</button>
          <div>
            <button class="btn btn-light">Cancel</button>
            <button class="btn btn-info mx-2"> Re-Select </button>
            <button class="btn btn-info"> Save </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <style>
    .custom-modal {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: rgba(0, 0, 0, 0.515);
      z-index: 1050;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .custom-modal .inner-cont {
      width: 90%;
      height: 90%;
    }

    .custom-modal .inner-cont .card {
      height: 100%;
    }

    .custom-modal .inner-cont .card .card-body {
      overflow-x: hidden
    }

    .custom-modal .inner-cont .card .card-body .aciton-cont i {
      cursor: pointer;
      background-color: rgb(229, 235, 255);
      padding: 5px;
      padding-bottom: 3px;
      border-radius: 5px;
    }

    .custom-modal .inner-cont .card .card-body .img-cont {
      max-height: 100%;
      position: relative;
      width: 100%;
      height: 100%;
    }

    .custom-modal .inner-cont .card .card-body .img-cont img {
      max-height: 100%;
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      height: 100%;
      width: 100%;
      object-fit: scale-down;
    }
  </style>

  <div class="col-12 grid-margin stretch-card" id="formCustomForm">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">New product form</h4>
        <div class="forms-sample">
          <div class="form-group">
            <label for="titleInput">Title <span></span></label>
            <input type="text" class="form-control" id="titleInput" placeholder="Title">
          </div>
          <div class="form-group">
            <label for="descriptionInput">Textarea <span></span></label>
            <textarea class="form-control" id="descriptionInput" rows="4" placeholder="Description"></textarea>
          </div>
          <div class="row">
            <div class="form-group col-6">
              <label for="priceInput">Price <span></span></label>
              <input type="text" class="form-control" id="priceInput" placeholder="Price">
            </div>
            <div class="form-group col-6">
              <label for="quantityInput">Quantity <span></span></label>
              <input type="text" class="form-control" id="quantityInput" placeholder="Quantity">
            </div>
          </div>

          <div class="row">
            <div class="form-group col-6">
              <label for="offerInput">Offer <span></span></label>
              <input type="text" class="form-control" id="offerInput" placeholder="Offer">
            </div>
            <div class="form-group col-6">
              <label for="categoryInput">Category <span></span></label>
              <select class="form-control" id="categoryInput">
                <option value="">--Select--</option>
                <% category.forEach((element,index,array)=>{ %>
                <option value="<%= element.category %> "> <%= element.category %> </option>
                <% }); %>
              </select>
            </div>
          </div>

          <div class="row">
            <div class="form-group col-6">
              <div class="form-group">
                <label>File upload <span></span></label>
                <div class="border p-3 m-0 rounded d-flex justify-content-between align-items-center">
                  <div class="preview">
                    <img class="img-fluid" id="imgAShow" style="height: 50px;" src="/res/select-file.jpg" alt="">
                  </div>
                  <div class="" id="imgABtn">
                    <button onclick="this.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
                      <i class="mdi mdi-plus text-white"></i>
                      Add Image
                    </button>
                    <input type="file" accept="image/jpeg" id="imgA" hidden>
                  </div>
                </div>
              </div>
            </div>
            <div class="form-group col-6">
              <div class="form-group">
                <label>File upload <span></span></label>
                <div class="border p-3 m-0 rounded d-flex justify-content-between align-items-center">
                  <div class="preview">
                    <img class="img-fluid" id="imgBShow" style="height: 50px;" src="/res/select-file.jpg" alt="">
                  </div>
                  <div id="imgBBtn">
                    <button onclick="this.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
                      <i class="mdi mdi-plus text-white"></i>
                      Add Image
                    </button>
                    <input type="file" accept="image/jpeg" id="imgB" hidden>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="form-group col-6">
              <div class="form-group">
                <label>File upload <span></span></label>
                <div class="border p-3 m-0 rounded d-flex justify-content-between align-items-center">
                  <div class="preview">
                    <img class="img-fluid" id="imgCShow" style="height: 50px;" src="/res/select-file.jpg" alt="">
                  </div>
                  <div id="imgCBtn">
                    <button onclick="this.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
                      <i class="mdi mdi-plus text-white"></i>
                      Add Image
                    </button>
                    <input type="file" accept="image/jpeg" id="imgC" hidden>
                  </div>
                </div>
              </div>
            </div>
            <div class="form-group col-6">
              <div class="form-group">
                <label>File upload <span></span></label>
                <div class="border p-3 m-0 rounded d-flex justify-content-between align-items-center">
                  <div class="preview">
                    <img class="img-fluid" id="imgDShow" style="height: 50px;" src="/res/select-file.jpg" alt="">
                  </div>
                  <div id="imgDBtn">
                    <button onclick="this.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
                      <i class="mdi mdi-plus text-white"></i>
                      Add Image
                    </button>
                    <input type="file" accept="image/jpeg" id="imgD" hidden>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="progress my-4" id="Progress__cont" style="height: 20px; display: none;">
            <div class="progress-bar" id="Progress_Bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
          </div>
          <div id="disp_state" style="display: none;" class="p-3 rounded my-3">Plz fill all required fields</div>
          <button type="button" onclick="updateUserData()" class="btn btn-info me-2">Add Product</button>
        </div>
      </div>
    </div>
  </div>
  <script src="/js/addProducts.js"></script>
  <script>
    const successBtnHtml = `       
    <button onclick="this.parentElement.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-success d-flex align-items-center gap-2 text-white" type="button">
      <i class="mdi mdi-checkbox-marked-circle "></i>
      Click to change
    </button>`;
    const addBtnHtml = `
    <button onclick="this.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
      <i class="mdi mdi-plus text-white"></i>
      Add Image
    </button>`;

    (function() {
      const editorPopUp = document.getElementById('imageEditor');
      const card_actions = document.getElementById('card_actions');
      const input_ids = ['imgA', 'imgB', 'imgC', 'imgD'];
      input_ids.forEach(id => {
        document.getElementById(id).addEventListener('change', (e) => {
          if (e.target.files) {
            // opens popup
            editorPopUp.style.display = 'flex';
            // gets image
            const img = document.getElementById('imageEditable');
            // set image from file to editor
            img.src = URL.createObjectURL(e.target.files[0]);
            // start cropper
            window['crop'] = new Cropper(img, {
              aspectRatio: 1 / 1
            });
            // set button actions inside popoup
            const buttons = card_actions.querySelectorAll('button');
            buttons[0].setAttribute('onclick', `preview('${id}',this)`);
            buttons[1].setAttribute('onclick', 'cancel()');
            buttons[2].setAttribute('onclick', `reSelectImg('${id}')`);
            buttons[3].setAttribute('onclick', `saveImage('${id}')`);
          };
        });
      });
    }());
    // TODO: cropper UI has some display bugs

    function saveImage(id) {
      const FinalID = id == 'imgA' ? 'img1' : id == 'imgB' ? 'img2' : id == 'imgC' ? 'img3' : id == 'imgD' ? 'img4' : undefined;
      if (window?.crop?.cropped) {
        let blob = window['crop'].getCroppedCanvas().toBlob(blob => {
          imgFiles[FinalID] = new File([blob], 'Edited.png', blob);
        });
        finalizeBtn(id);
      } else if (window.finalImg) {
        imgFiles[FinalID] = window.finalImg;
        finalizeBtn(id);
      };
      cancel();
    };

    function finalizeBtn(id) {
      const btn_cont = document.getElementById(id + 'Btn');
      btn_cont.querySelector('button').remove();

      const img_cont = document.getElementById(id + 'Show');
      let doc = document.createElement('div');
      doc.innerHTML = successBtnHtml;
      btn_cont.prepend(doc);

      if (window?.crop?.cropped) {
        img_cont.src = window['crop'].getCroppedCanvas().toDataURL('image/jpeg');
      } else {
        img_cont.src = window.previewImg;
      };

    };

    function reSelectImg(id) {
      cancel();
      document.getElementById(id).click();
    };

    function cancel() {
      if (window['crop']) window['crop'].destroy();
      const editorPopUp = document.getElementById('imageEditor');
      editorPopUp.style.display = 'none';
    };

    function preview(id, btn) {
      const buttons = document.getElementById('imageEditor').querySelector('.aciton-cont').querySelectorAll('button');
      window.imageHolder = document.getElementById('imageEditable').src;
      let blob = window['crop'].getCroppedCanvas().toBlob(blob => {
        window.finalImg = new File([blob], 'Edited.png', blob);
      });
      window.previewImg = window['crop'].getCroppedCanvas().toDataURL('image/jpeg');
      let data = window['crop'].getCroppedCanvas().toDataURL('image/jpeg');
      window['crop'].destroy();
      document.getElementById('imageEditable').src = data;
      btn.setAttribute('onclick', `editImage('${id}',this)`);
      btn.innerText = 'Re-Edit';
      buttons.forEach(btns => {
        btns.setAttribute('disabled', '');
      });
    };

    function editImage(id, btn) {
      const buttons = document.getElementById('imageEditor').querySelector('.aciton-cont').querySelectorAll('button');
      const img = document.getElementById('imageEditable');
      img.src = window.imageHolder;
      window['crop'] = new Cropper(img, {
        aspectRatio: 1 / 1
      });
      buttons.forEach(btns => {
        btns.removeAttribute('disabled');
      });
      btn.setAttribute('onclick', `preview('${id}',this)`);
      btn.innerText = 'Preview';
    };
  </script>

</div>