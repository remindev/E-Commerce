<div id="preloder" style="display: none;">
  <div class="bar" style="margin-top:50px;"></div>
  <p style="margin-bottom:50px;">Connecting to server</p>
</div>

<div class="card">
  <div class="title">
    <h1>Complete signup</h1>
  </div>
  <div class="status_disp" id="status_disp" style="display: none;"> </div>
  <div class="input-group">
    <input type="text" placeholder="Name" id="nameInput">
    <input type="password" placeholder="Password" id="passwordInput">
    <input type="password" placeholder="Confirm" id="confirmInput">
    <button onclick="validate('<%=locals?.regID%>')">Continue</button>
  </div>
</div>

<script>
  const validate = async (regID) => {
    const disp_state = document.getElementById('status_disp');
    const loader = document.getElementById('preloder');
    const name = document.getElementById('nameInput');
    const password = document.getElementById('passwordInput');
    const confirm = document.getElementById('confirmInput');
    disp_state.classList.remove('err');
    disp_state.innerText = '';
    disp_state.style.display = 'none';

    try {

      if (!name.value) throw 'Name is required';
      if (name.value.match(/^[a-zA-Z]+(([a-zA-Z ])?[a-zA-Z]*)*$/g)) {} else throw 'Enter a valid name';
      if (!password.value) throw 'Password field cannot be empty';
      if (password.value?.trim().length < 6) throw 'password must contain atleast 6 characters';
      if (!confirm.value) throw 'Confirm field cannot be empty';
      if (password.value?.trim() != confirm.value?.trim()) throw `Confirm password dosen't match`;


      //   show loader
      loader.style.display = 'flex';
      loader.querySelector('p').innerText = 'Connecting to server';

      // sending request to server
      const dataFromServer = await fetch(`/user_registration/${regID}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          name: name.value?.trim(),
          password: password.value?.trim()
        })
      });

      // response form server 
      const res = await dataFromServer.json();

      // loader hidden
      loader.style.display = 'none';

      // handling error messsages form server
      if (res.status == 'error') throw res.message;

      // sendign user to curresponding pages
      if (res.status == 'good') window.location.href = res.action;

    } catch (error) {
      loader.style.display = 'none';
      disp_state.classList.add('err')
      disp_state.innerText = error;
      disp_state.style.display = 'block';
      return 0;
    };
  };
</script>