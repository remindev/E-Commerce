<div id="preloder" style="display: none;">
  <div class="bar" style="margin-top:50px;"></div>
  <p style="margin-bottom:50px;">Connecting to server</p>
</div>

<div class="card">
  <div class="title">
    <h1>Enter password</h1>
  </div>
  <div class="status_disp" id="status_disp" style="display: none;"> </div>
  <div class="input-group">
    <div class="input-cont">
      <span class="visibility" onclick="show(this)">SHOW</span>
      <span class="visibility" onclick="hide(this)" style="display: none;">HIDE</span>
      <input type="password" placeholder="Password" id="passwordInput">
    </div>
    <button onclick="validate('<%=locals?.authID%>')">Continue</button>
  </div>
  <p class="forget" onclick="window.location.href='/forget_password/<%=locals?.authID%>'">Forget password ?</p>
</div>

<script>
  function show(btn) {
    btn.parentElement.querySelector('input').setAttribute('type', 'text');
    btn.parentElement.querySelectorAll('span')[0].style.display = 'none';
    btn.parentElement.querySelectorAll('span')[1].style.display = 'flex';
  }

  function hide(btn) {
    btn.parentElement.querySelector('input').setAttribute('type', 'password');
    btn.parentElement.querySelectorAll('span')[0].style.display = 'flex';
    btn.parentElement.querySelectorAll('span')[1].style.display = 'none';
  }

  async function validate(authID) {
    const disp_state = document.getElementById('status_disp');
    const password = document.getElementById('passwordInput');
    const loader = document.getElementById('preloder');
    disp_state.classList.remove('err');
    disp_state.innerText = '';
    disp_state.style.display = 'none';

    try {
      // basic validaton
      if (password.value.length == 0) throw 'This field cannot be empty';
      if (password.value.length < 6) throw `Password need be ${6-password.value.length} more characters`;

      // show loader
      loader.style.display = 'flex';

      const responseFromServer = await fetch(`/user_signin_password/${authID}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          password: password.value
        })
      });

      const res = await responseFromServer.json();

      // loader hidden
      loader.style.display = 'none';

      // handling error messsages form server
      if (res.status == 'error') throw res.message;

      // sendign user to curresponding pages
      if (res.status == 'good') window.location.href = res.action;

    } catch (error) {
      loader.style.display = 'none';
      disp_state.classList.add('err')
      disp_state.innerText = error;
      disp_state.style.display = 'block';
      return 0;
    };
  };
</script>