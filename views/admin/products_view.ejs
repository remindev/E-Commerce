<!-- Begin Page Content -->
<div class="container-fluid">

  <!-- Page Heading -->
  <h1 class="h3 mb-2 text-gray-800" style="line-height: 1.3;"> <%= product.title %> </h1>


  <div class="row">

    <div class="col-12 p-2">
      <div class="row">
        <div class="col-6 col-md-3 p-2">
          <div class="card rounded bg-white p-4">
            <img src="/product_images/<%=product?.PID %>1.jpg" class="img-fluid" alt="">
          </div>
        </div>
        <div class="col-6 col-md-3 p-2">
          <div class="card rounded bg-white p-4">
            <img src="/product_images/<%=product?.PID %>2.jpg" class="img-fluid" alt="">
          </div>
        </div>
        <div class="col-6 col-md-3 p-2">
          <div class="card rounded bg-white p-4">
            <img src="/product_images/<%=product?.PID %>3.jpg" class="img-fluid" alt="">
          </div>
        </div>
        <div class="col-6 col-md-3 p-2">
          <div class="card rounded bg-white p-4">
            <img src="/product_images/<%=product?.PID %>4.jpg" class="img-fluid" alt="">
          </div>
        </div>
      </div>
    </div>

    <div class="col-12 p-2">
      <div class="card rounded bg-white py-2 pt-3 px-4">
        <h5 style="line-height: 1.3;"><%=product?.title?product.title:''%></h5>
        <p><%=product?.description?product.description:''%></p>
        <p style="text-transform:capitalize;">Category : <%= product?.category %> </p>
        <p>Price : <%=product?.price?product.price+' Rs':''%></p>
        <p>Offer : - <%=product?.offer?''+product.offer+' Rs / Pcs':''%></p>
        <p>Amount need to pay : <%=product?.price?product.price - product.offer+' Rs / Pcs':''%></p>
      </div>
    </div>

    <div class="col-12 p-2">
      <div class="row">

        <div class="col-md-8 p-2">
          <div class="rounded card bg-white py-1 px-2">
            <div class="card-body">
              <h4 class="card-title">Todays view count</h4>
              <canvas id="productDailyView"></canvas>
            </div>
          </div>
        </div>

        <div class="col-md-4 p-2">
          <div class="rounded card bg-white h-100">
            <div class="card-body p-3">
              <h4 class="card-title">Views This week</h4>
              <canvas id="productWeekViews" style="position: relative; height:110vh; width:80vw"></canvas>
            </div>
          </div>
        </div>

        <div class="col-md-8 p-2">
          <div class="rounded card bg-white">
            <div class="card-body p-3">
              <h4 class="card-title">Impressions today</h4>
              <canvas id="productDayImpressions"></canvas>
            </div>
          </div>
        </div>

      </div>
    </div>

    <div class="col-12 p-2 bg-white m-2 p-4">
      <h5>Edit product <small><i></i></small></h5>
      <p class="text-muted"><b>TIP :</b> Change how the products performs by adding catchy title and description</p>
      <div class="mt-3">
        <a href="/products/edit_product/<%= product.PID %>" class="btn btn-inverse-info">Edit product</a>
      </div>
    </div>

    <div class="col-12 p-2 bg-white m-2 p-4">
      <h5>Change visiblity of product <small><i></i></small></h5>
      <p class="text-muted"><b class="text-warning">Note :</b> This will prevent listing the products to users </p>
      <div class="mt-3">
        <a href="#" class="btn btn-inverse-info">Make this product hidden</a>
      </div>
    </div>

    <div class="col-12 p-2 bg-white m-2 p-4">
      <h5>Delete product <small><i></i></small></h5>
      <p class="text-muted"><b class="text-danger">Note :</b> Once you delete the product the data cannot be recovered !</p>
      <div class="mt-3">
        <a onclick="deleteProduct('<%=product.PID%>')" class="btn btn-inverse-danger">Delete product</a>
      </div>
    </div>

    <div class="mt-5">
      <div class="mt-5"></div>
    </div>

  </div>

  <script>
    function deleteProduct(PID) {

      Swal.fire({
        title: 'Delete this product ?'
      }).then((cnf) => {
        if (cnf.isConfirmed) {
          fetch('/products/delete_product', {
              method: "DELETE",
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                message: "Delete me",
                PID: PID
              })
            })
            .then(res => res.json())
            .then(res => {
              if (res.status == 'good') {
                if (res.action) {
                  window.location.href = res.action;
                } else {
                  window.location.href = '/products'
                }
              } else {
                toast(res.message, 'error');
              };
            })
            .catch(error => {
              console.error('Error form delete fetch => ', error)
              toast("Error while connecting to server", 'error')
            });
        };
      });
    };
    (async function() {
      try {
        const reslut = await fetch('/api/products?analytics-pid=<%=product?.PID%>', {
          method: 'GET'
        });
        const res = await reslut.json();

        const dayxValues = [];
        for (let i = 0; i <= 23; i++) {
          if (i >= 12) dayxValues.push(i == 12 ? 12 + " pm" : i - 12 + " pm");
          else dayxValues.push(i + " am");
        };

        const weekxValues = [];
        for (let i = 1; i <= 7; i++) {
          weekxValues.push(i);
        };

        const dayOptions = {
          legend: {
            display: false
          },
          scales: {
            yAxes: [{
              ticks: {
                min: 0,
                precision: 0
              }
            }],
          },
          plugins: {
            filler: {
              propagate: true
            }
          }
        };

        const dayColor = [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)',
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)',
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)',
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ];

        let yValuesA = [];
        let yValuesB = [];
        let yValuesC = [];

        for (let i = 0; i < 24; i++) {
          let outputA = '';
          let outputB = '';
          for (let j = 0; j < 24; j++) {
            if (res['analytics-pid'].day_views[j]) {
              if (res['analytics-pid'].day_views[j].hour == i) {
                outputA = Number(res['analytics-pid'].day_views[j].count);
                break;
              } else {
                outputA = 0;
              };
            };
          };
          for (let j = 0; j < 24; j++) {
            if (res['analytics-pid'].day_impressions[j]) {
              if (res['analytics-pid'].day_impressions[j].hour == i) {
                outputB = Number(res['analytics-pid'].day_impressions[j].count);
                break;
              } else {
                outputB = 0;
              };
            };
          };
          yValuesA.push(outputA);
          yValuesC.push(outputB);
        };

        for (let i = 0; i < 7; i++) {
          let output = '';
          for (let j = 0; j < 7; j++) {
            if (res['analytics-pid'].week_views[j]) {
              if (res['analytics-pid'].week_views[j].day == i) {
                output = Number(res['analytics-pid'].week_views[j].count);
                break;
              } else {
                output = 0;
              };
            };
          };
          yValuesB.push(output);
        };

        new Chart("productDailyView", {
          type: "bar",
          data: {
            labels: dayxValues,
            datasets: [{
              lineTension: 0,
              backgroundColor: dayColor,
              borderColor: dayColor,
              fill: true,
              borderWidth: 1,
              data: yValuesA
            }]
          },
          options: dayOptions
        });

        new Chart("productWeekViews", {
          type: "line",
          data: {
            labels: weekxValues,
            datasets: [{
              lineTension: 0,
              backgroundColor: dayColor,
              borderColor: dayColor,
              fill: true,
              borderWidth: 2,
              data: yValuesB
            }]
          },
          options: dayOptions
        });

        new Chart("productDayImpressions", {
          type: "line",
          data: {
            labels: dayxValues,
            datasets: [{
              lineTension: 0,
              backgroundColor: dayColor,
              borderColor: dayColor,
              fill: true,
              borderWidth: 2,
              data: yValuesC
            }]
          },
          options: dayOptions
        });
      } catch (error) {
        console.warn('Error => ', error);
      };

    }());
  </script>