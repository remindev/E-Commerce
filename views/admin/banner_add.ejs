<!-- Begin Page Content -->
<div class="container-fluid">

  <!-- Page Heading -->
  <h1 class="h3 mb-2 text-gray-800" style="line-height: 1.3;"> Add banner </h1>

  <div class="row m-0 mt-4 mb-5">
    <div class="col-12 rounded bg-white p-4">

      <div class="form-group">
        <label for="titleInput" class="w-100 d-flex justify-content-between">Title <span></span></label>
        <textarea type="text" class="form-control" name="Title" id="titleInput" autocomplete="off" placeholder="Title">%></textarea>
      </div>

      <div class="form-group">
        <label for="description">Description * <span></span></label>
        <textarea type="text" class="form-control" name="description" id="descriptionInput" style="height: 100px;" autocomplete="off" placeholder="Breaf description"></textarea>
      </div>

      <div class="row">
        <div class="form-group col-12 col-md-6">
          <label for="price">Title Top <span></span></label>
          <input type="text" name="price" class="form-control" id="titleTopInput" placeholder="Price" value="" autocomplete="off">
        </div>
        <div class="form-group col-12 col-md-6">
          <label for="quantity">Title bottom <span></span></label>
          <input type="text" name="quantity" class="form-control" id="titleBottomInput" autocomplete="off" placeholder="Quantity" value="">
        </div>
      </div>

      <div class="row">
        <div class="form-group col-12 col-md-6">
          <label for="discount">Action button (eg.. shop now) <span></span></label>
          <input type="text" name="offer" class="form-control" id="btnNameInput" autocomplete="off" placeholder="action button name" value="">
        </div>
        <div class="form-group col-12 col-md-6">
          <label for="discount">Action button url (eg.. /shop) <span></span></label>
          <input type="text" name="offer" class="form-control" id="btnActionInput" autocomplete="off" placeholder="action button url" value="">
        </div>
      </div>

      <div class="form-group col-12">
        <div class="form-group">
          <label>Banner image <span></span></label>
          <div class="border p-3 m-0 rounded d-flex justify-content-between align-items-center">
            <div class="preview">
              <img class="img-fluid" id="imgShow" style="height: 200px;" src="/res/select-file.jpg" alt="">
            </div>
            <div id="">
              <button onclick="this.parentElement.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
                <i class="mdi mdi-plus text-white"></i>
                Add Image
              </button>
            </div>
            <input type="file" accept="image/jpeg" id="img" hidden>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group col-12 col-md-2">
          <label for="bgColor">Background color <span></span></label>
          <input type="color" name="bgColor" class="w-100" value="#ffffff" id="bgColorInput">
        </div>
        <div class="form-group col-12 col-md-2">
          <label for="textColor">Text color <span></span></label>
          <input type="color" name="textColor" class="w-100" value="#000000" id="textColorInput">
        </div>
      </div>

      <h5>Add new banner<small><i></i></small></h5>
      <p class="text-muted"><b class="text-warning">Note :</b> It take some time to reflect changes everywere </p>
      <div class="mt-3">
        <div class="btn btn-info" onclick="uploadDetails('')">Apply changes</div>
        <div class="btn btn-light">Cancel</div>
      </div>

    </div>
  </div>

  <div class="bg-white p-4 mb-5">
    <h3>Preview</h3>

    <div class="card shadow">
      <div class="row">
        <div class="col-6">

        </div>
      </div>
    </div>

  </div>

  <div style="margin-top: 300px;"></div>

</div>
<!-- /.container-fluid -->

<script>
  const getInputs = (isError) => {

    const inputs = {
      title: 'titleInput',
      description: 'descriptionInput',
      titleTop: 'titleTopInput',
      titleBottom: 'titleBottomInput',
      btnName: 'btnNameInput',
      btnAction: 'btnActionInput',
      bg: 'bgColorInput',
      color: 'textColorInput'
    };

    const output = {};

    const keys = Object.keys(inputs);

    for (const key of keys) {
      if (isError) output[key + 'Err'] = document.getElementById(inputs[key]).parentElement.querySelector('span');
      else output[key] = document.getElementById(inputs[key]);
    };

    return output;
  };

  let imgFile;

  const successBtnHtml = `       
    <button onclick="this.parentElement.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-success d-flex align-items-center gap-2 text-white" type="button">
      <i class="mdi mdi-checkbox-marked-circle "></i>
      Click to change
    </button>`;
  const addBtnHtml = `
    <button onclick="this.parentElement.querySelector('input').click()" class="file-upload-browse btn-sm btn btn-info d-flex align-items-center gap-2" type="button">
      <i class="mdi mdi-plus text-white"></i>
      Add Image
    </button>`;

  (() => {
    const input = document.getElementById("img");
    const imgShow = document.getElementById('imgShow');

    input.addEventListener('change', (e) => {
      if (e.target.files) {
        imgFile = e.target.files[0];
        imgShow.src = URL.createObjectURL(e.target.files[0]);
        input.parentElement.querySelector('button').remove()
        input.parentElement.innerHTML += successBtnHtml;
      };
    });

  })();

  async function uploadDetails() {

    const inputs = getInputs();
    const inputErrs = getInputs(true);

    Object.keys(inputErrs).forEach(key => {
      inputErrs[key].innerText = '';
    });

    const output = {
      thereIsNoError: true
    };

    const createErr = (key, message) => {
      output.thereIsNoError = false;
      inputErrs[key + 'Err'].innerText = message;
      return true;
    };

    Object.keys(inputs).forEach(key => {

      if (key == 'title' && inputs[key].value?.trim().length == 0) createErr(key, 'Title required');
      else output[key] = inputs[key].value?.trim();

      if (key == 'description' && inputs[key].value?.trim().length == 0) createErr(key, 'Description required');
      else output[key] = inputs[key].value?.trim();

      if (key == 'btnName' && inputs[key].value?.trim().length == 0) createErr(key, 'button name required');
      else output[key] = inputs[key].value?.trim();

      if (key == 'btnAction' && inputs[key].value?.trim().length == 0) createErr(key, 'button action path required');
      else output[key] = inputs[key].value?.trim();

    });

    if (output.thereIsNoError) {
      try {

        const data = new FormData();

        data.append('data', JSON.stringify(output));
        data.append('img', imgFile);

        const responseFormSever = await fetch('/banner/add', {
          method: 'POST',
          body: data
        });

        const res = await responseFormSever.json();

        if (res.status == 'error') throw res.message;

        window.location.reload();

      } catch (error) {
        toast(error, 'error');
      };
    };

  };
</script>